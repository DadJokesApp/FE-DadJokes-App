{"ast":null,"code":"import _defineProperty from \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/UpdateJoke/updtJk.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react'; // import './update.css'\n\nimport { connect } from 'react-redux';\nimport { getJokeById } from '../../actions/getJokeById';\nimport { updateJoke } from '../../actions/updateJoke';\nimport { deleteJoke } from '../../actions/deleteJoke';\nimport { Form, Input, Button } from 'reactstrap'; // import { Link } from 'react-router-dom'\n\nclass UpdtJk extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        joke: _objectSpread({}, this.props.joke, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.updateJoke(this.state.joke); // .then(res => (this.props.history.push('/home')))\n      // console.log(this.props.user.id)\n    };\n\n    const joke = this.props.joke;\n    console.log(\"Joke: \".concat(this.props.joke.id));\n    this.state = {\n      updatedJoke: {\n        id: \"\".concat(this.props.joke.id),\n        joke: \"\".concat(this.props.joke.joke),\n        punchline: \"\".concat(this.props.joke.punchline),\n        revealed: \"\".concat(this.props.joke.revealed),\n        laughs: \"\".concat(this.props.joke.laughs)\n      }\n    };\n  }\n\n  render() {\n    // const { joke } = this.props\n    // console.log(joke.id)\n    // console.log(this.state.updatedJoke)\n    console.log(this.props.joke.joke);\n    return React.createElement(\"div\", {\n      className: \"update_form_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key_value_pears\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Joke:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"joke\",\n      placeholder: \"Joke\",\n      value: this.state.joke.joke,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"key_value_pears\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" \", React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Punchline:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"punchline\",\n      placeholder: \"Punchline\",\n      value: this.props.joke.punchline,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Submit Changes\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    joke: state.joke\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateJoke,\n  deleteJoke,\n  getJokeById\n})(UpdtJk);","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/UpdateJoke/updtJk.js"],"names":["React","connect","getJokeById","updateJoke","deleteJoke","Form","Input","Button","UpdtJk","Component","constructor","props","handleInputChange","e","setState","joke","target","name","value","handleSubmit","preventDefault","state","console","log","id","updatedJoke","punchline","revealed","laughs","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\n// import './update.css'\n\nimport { connect } from 'react-redux'\nimport { getJokeById } from '../../actions/getJokeById'\nimport { updateJoke } from '../../actions/updateJoke'\nimport { deleteJoke } from '../../actions/deleteJoke'\nimport { Form, Input, Button } from 'reactstrap'\n// import { Link } from 'react-router-dom'\n\nclass UpdtJk extends React.Component {\n  constructor(props) {\n    super(props)\n    const { joke } = this.props\n    console.log(`Joke: ${this.props.joke.id}`)\n    this.state = {\n      updatedJoke: {\n        id: `${this.props.joke.id}`,\n        joke: `${this.props.joke.joke}`,\n        punchline: `${this.props.joke.punchline}`,\n        revealed: `${this.props.joke.revealed}`,\n        laughs: `${this.props.joke.laughs}`\n      }\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      joke: {\n        ...this.props.joke,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props\n      .updateJoke(this.state.joke)\n      // .then(res => (this.props.history.push('/home')))\n    // console.log(this.props.user.id)\n  }\n\n  render() {\n    // const { joke } = this.props\n    // console.log(joke.id)\n    // console.log(this.state.updatedJoke)\n    console.log(this.props.joke.joke)\n    return (\n      <div className='update_form_wrapper'>\n        {  }\n        {  }\n        <Form onSubmit={this.handleSubmit}>\n          <div className='key_value_pears'> {/* üîëüçê */}\n            <h5>Joke:</h5>\n            <Input \n              type='text'\n              name='joke'\n              placeholder='Joke'\n              value={this.state.joke.joke}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          \n          <div className='key_value_pears'> {/* üîëüçê */}\n            <h5>Punchline:</h5>\n            <Input \n              type='text'\n              name='punchline'\n              placeholder='Punchline'\n              value={this.props.joke.punchline}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          {/* <div className='key_value_pears'>\n            <h5>Revealed:</h5>\n            <Input \n              type='text'\n              name='revealed'\n              placeholder='Revealed'\n              value={this.state.updatedJoke.revealed}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className='key_value_pears'>\n            <h5>Laughs:</h5>\n            <Input \n              type='text'\n              name='laughs'\n              placeholder='Profile image URL'\n              value={this.state.updatedJoke.laughs}\n              onChange={this.handleInputChange}\n            />\n          </div> */}\n\n          <Button>Submit Changes</Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    joke: state.joke,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateJoke, deleteJoke, getJokeById }\n)(UpdtJk)"]},"metadata":{},"sourceType":"module"}