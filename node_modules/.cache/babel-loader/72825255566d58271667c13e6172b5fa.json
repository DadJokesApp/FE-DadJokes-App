{"ast":null,"code":"import _defineProperty from \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/Landing/PublicJokes.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Joke from './Joke'; // import axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport Typing from 'react-typing-animation';\nimport './JokeList.css';\nimport SearchForm from '../../components/search/SearchForm';\nimport { getPublicJokes } from '../../actions/publicJokes';\n\nclass PublicJokes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchJoke = list => {\n      this.setState(_objectSpread({}, this.props.getPublicJokes(), {\n        publicJokes: list\n      }));\n    };\n\n    this.state = {\n      publicJokes: \"\".concat(this.props.publicJokes)\n    };\n  } // state = {jokes : [],loading : false};\n  // static defaultProps = {\n  //   jokesToGet: 4\n  //}\n\n\n  componentDidMount() {\n    this.props.getPublicJokes();\n  } // getNewJokes = () => {\n  //   this.setState({loading: true });\n  // }\n  // getJokes = async () => {\n  //   let publicJokes = [];\n  //   // let pull = axios.get('https://dadjokes-backend.herokuapp.com/api/jokes/public');\n  //   while (publicJokes.length < this.props.jokesToGet){\n  //     let res = await axios.get('https://dadjokes-backend.herokuapp.com/api/jokes/public');\n  //     publicJokes.push(res.data);\n  //   }\n  //   let publicJokesA = publicJokes[0].map(j => {\n  //     return j;\n  //   })\n  //   this.setState({publicJokesA, loading: false});\n  // }\n\n\n  handleVote(id, delta) {\n    this.setState(st => ({\n      publicJokes: st.publicJokes.map(j => j.id === id ? _objectSpread({}, j, {\n        votes: j.votes + delta\n      }) : j)\n    }), window.localStorage.setItem('publicJokes', JSON.stringify(this.state.jokes)));\n  } // handleClick = () => {\n  //   this.setState(\n  //     {\n  //       loading: true\n  //     },\n  //     this.getJokes\n  //   );\n  // };\n\n\n  render() {\n    if (this.props.gettingJokes) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Jokes Loading...\"));\n    }\n\n    console.log(this.props, \"PUB PROPS\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      className: \"search-bar\",\n      searchJoke: this.searchJoke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"JokeList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"JokeList-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"JokeList-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Typing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"PUBLIC\"), \" JOKES\")), React.createElement(\"img\", {\n      src: \"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\",\n      alt: \"Laughing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Get Dad Jokes\")), React.createElement(\"div\", {\n      className: \"JokeList-jokes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.publicJokes.map(j => React.createElement(Joke, {\n      key: j.id,\n      votes: j.votes,\n      text: j.joke,\n      upvote: () => this.handleVote(j.id, 1),\n      downvote: () => this.handleVote(j.id, -1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), console.log(this.props, 'bottom props'))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    publicJokes: state.publicJokes,\n    gettingJokes: state.gettingJokes\n  };\n};\n\nexport default connect(mapStateToProps, // null,\n{\n  getPublicJokes\n})(PublicJokes);","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/Landing/PublicJokes.js"],"names":["React","Joke","connect","Typing","SearchForm","getPublicJokes","PublicJokes","Component","constructor","props","searchJoke","list","setState","publicJokes","state","componentDidMount","handleVote","id","delta","st","map","j","votes","window","localStorage","setItem","JSON","stringify","jokes","render","gettingJokes","console","log","handleClick","joke","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Joke from './Joke';\n// import axios from 'axios';\nimport { connect } from 'react-redux';\nimport Typing from 'react-typing-animation';\nimport './JokeList.css';\nimport SearchForm from '../../components/search/SearchForm';\nimport { getPublicJokes } from '../../actions/publicJokes'\n\n\n\n\nclass PublicJokes extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      publicJokes: `${this.props.publicJokes}`\n    }\n    \n  }\n  // state = {jokes : [],loading : false};\n  // static defaultProps = {\n  //   jokesToGet: 4\n   //}\n  componentDidMount(){\n    \n    this.props.getPublicJokes();\n  }\n\n  // getNewJokes = () => {\n  //   this.setState({loading: true });\n  // }\n\n\n  // getJokes = async () => {\n  //   let publicJokes = [];\n  //   // let pull = axios.get('https://dadjokes-backend.herokuapp.com/api/jokes/public');\n\n  //   while (publicJokes.length < this.props.jokesToGet){\n  //     let res = await axios.get('https://dadjokes-backend.herokuapp.com/api/jokes/public');\n  //     publicJokes.push(res.data);\n\n  //   }\n\n    \n\n  //   let publicJokesA = publicJokes[0].map(j => {\n  //     return j;\n  //   })\n\n  //   this.setState({publicJokesA, loading: false});\n  // }\n\n  handleVote(id, delta) {\n    this.setState(\n      st => ({\n        publicJokes: st.publicJokes.map(j => \n          j.id === id\n          ? {\n            ...j,\n            votes: j.votes + delta\n          }\n          : j\n          )\n      }),\n      (window.localStorage.setItem('publicJokes', JSON.stringify(this.state.jokes)))\n    );\n  }\n\n  // handleClick = () => {\n  //   this.setState(\n  //     {\n  //       loading: true\n  //     },\n  //     this.getJokes\n  //   );\n  // };\n\n  searchJoke = (list) => {\n    this.setState({\n      ...this.props.getPublicJokes(), publicJokes:list\n    })\n  }\n  \n  \n  render(){\n    if (this.props.gettingJokes) {\n      return(\n        <div>\n          <h1>Jokes Loading...</h1>\n        </div>\n      );\n    }\n    console.log(this.props, \"PUB PROPS\")\n    return (\n      <div className = 'container'>\n        <SearchForm className='search-bar' searchJoke={this.searchJoke}/>\n        <div className=\"JokeList\">\n          <div className= \"top-word\">\n\n          </div>\n\n          <div className = 'JokeList-sidebar'>\n            <h1 className=\"JokeList-title\">\n              <Typing>\n                <span>PUBLIC</span> JOKES\n              </Typing>\n            </h1>\n            <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\n            alt = \"Laughing\"\n            />\n            <button className = \"JokeList-getmore\" onClick= {this.handleClick} >\n              Get Dad Jokes\n            </button>\n          </div>\n\n          <div className=\"JokeList-jokes\">\n          {this.props.publicJokes.map(j => (\n            <Joke \n              key = {j.id}\n              votes = {j.votes}\n              text = {j.joke}\n              upvote = {() => this.handleVote(j.id,1)}\n              downvote= {() => this.handleVote(j.id, -1)}\n            \n            />\n          ))} \n          {console.log(this.props, 'bottom props')}\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    publicJokes: state.publicJokes,\n    gettingJokes: state.gettingJokes,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  { getPublicJokes }\n)(PublicJokes)"]},"metadata":{},"sourceType":"module"}