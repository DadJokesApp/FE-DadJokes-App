{"ast":null,"code":"var _jsxFileName = \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/PrivateJokes/jokes.js\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaughSquint } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nconst laugh = React.createElement(FontAwesomeIcon, {\n  icon: faLaughSquint,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\nconst comment = React.createElement(FontAwesomeIcon, {\n  icon: faComment,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\n\nclass Jokes extends React.Component {\n  render() {\n    const _this$props = this.props,\n          jokes = _this$props.jokes,\n          toggleReveal = _this$props.toggleReveal,\n          hidden = _this$props.hidden;\n    return React.createElement(\"div\", {\n      className: \"joke-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, jokes.map(joke => {\n      return React.createElement(Link, {\n        to: \"/jokes/\".concat(joke.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: joke.id,\n        className: \"indi-joke\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"joke\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"joke-meat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.jokes.img_url,\n        alt: \"profile pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        className: \"joke-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.jokes.username, \":\"), React.createElement(\"div\", {\n        className: \"joke-joke\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.jokes.joke))), React.createElement(\"div\", {\n        className: \"reveal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"punchline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: hidden ? 'hidden' : '',\n        hidden: hidden,\n        className: \"joke-punchline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.jokes.punchline)), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, comment, \" 5\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, laugh, \" 56\"), React.createElement(Button, {\n        onClick: toggleReveal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Reveal Punchline!\"))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    jokes: state.jokes,\n    jokeComments: state.jokeComments\n  };\n};\n\nexport default connect(mapStateToProps, {})(Jokes);","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/PrivateJokes/jokes.js"],"names":["React","Button","FontAwesomeIcon","faLaughSquint","faComment","Link","connect","laugh","comment","Jokes","Component","render","props","jokes","toggleReveal","hidden","map","joke","id","img_url","username","punchline","mapStateToProps","state","jokeComments"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLaughSquint } from '@fortawesome/free-solid-svg-icons'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst laugh = <FontAwesomeIcon icon={faLaughSquint} />\nconst comment = <FontAwesomeIcon icon={faComment} />\n\nclass Jokes extends React.Component {\n  render() {\n    const { jokes, toggleReveal, hidden } = this.props\n    return (\n      <div className='joke-wrapper'>\n        {jokes.map(joke => {\n          return (\n            <Link to={`/jokes/${joke.id}`}>\n              <div key={joke.id} className='indi-joke'>\n                <div className='joke'>\n                  <div className='joke-meat'>\n                    <img src={this.props.jokes.img_url} alt='profile pic' />\n                    <h6 className='joke-username'>{this.props.jokes.username}:</h6>\n                    <div className='joke-joke'>{this.props.jokes.joke}</div>\n                  </div>\n                </div>\n                <div className='reveal'>\n                  <div className='punchline'>\n                    <div \n                      id={hidden ? 'hidden' : ''}\n                      hidden={hidden}\n                      className='joke-punchline'>\n                      {this.props.jokes.punchline}\n                    </div>\n                  </div>\n                  <Button>\n                    {comment} 5\n                  </Button>\n                  <Button>{laugh} 56</Button>\n                  <Button onClick={toggleReveal}>Reveal Punchline!</Button>\n                </div>\n              </div>\n            </Link>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      jokes: state.jokes,\n      jokeComments: state.jokeComments,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(Jokes)"]},"metadata":{},"sourceType":"module"}