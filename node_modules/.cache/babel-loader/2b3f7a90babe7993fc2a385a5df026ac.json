{"ast":null,"code":"import axios from 'axios';\nexport const GET_JOKES_START = 'GET_JOKES_START';\nexport const GET_JOKES_SUCCESS = 'GET_JOKES_SUCCESS';\nexport const GET_JOKES_FAILURE = 'GET_JOKES_FAILURE';\nexport const getJokes = () => dispatch => {\n  dispatch({\n    type: GET_JOKES_START\n  });\n  axios.get('http://localhost:4000/api/jokes') // .get('https://dadjokes-backend.herokuapp.com/api/jokes')\n  .then(res => {\n    console.log(res.data);\n    dispatch({\n      type: GET_JOKES_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_JOKES_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/actions/getJokes.js"],"names":["axios","GET_JOKES_START","GET_JOKES_SUCCESS","GET_JOKES_FAILURE","getJokes","dispatch","type","get","then","res","console","log","data","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAD,EAAAA,KAAK,CACFO,GADH,CACO,iCADP,EAEE;AAFF,GAGGC,IAHH,CAGQC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,iBADC;AAEPW,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAFN,KAAD,CAAR;AAIH,GATH,EAUGE,KAVH,CAUSC,GAAG,IAAI;AACVV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,iBAAR;AAA2BU,MAAAA,OAAO,EAAEE;AAApC,KAAD,CAAR;AACH,GAZH;AAaD,CAfM","sourcesContent":["import axios from 'axios'\n\nexport const GET_JOKES_START = 'GET_JOKES_START'\nexport const GET_JOKES_SUCCESS = 'GET_JOKES_SUCCESS'\nexport const GET_JOKES_FAILURE = 'GET_JOKES_FAILURE'\n\nexport const getJokes = ()  => dispatch => {\n  dispatch({ type: GET_JOKES_START })\n  axios\n    .get('http://localhost:4000/api/jokes')\n    // .get('https://dadjokes-backend.herokuapp.com/api/jokes')\n    .then(res => {\n        console.log(res.data)\n        dispatch({\n          type: GET_JOKES_SUCCESS,\n          payload: res.data\n        })\n    })\n    .catch(err => {\n        dispatch({ type: GET_JOKES_FAILURE, payload: err })\n    })\n}"]},"metadata":{},"sourceType":"module"}