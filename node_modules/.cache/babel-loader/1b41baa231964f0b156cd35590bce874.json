{"ast":null,"code":"import axios from 'axios';\nexport const NEW_JOKE_START = 'NEW_JOKE_START';\nexport const NEW_JOKE_SUCCESS = 'NEW_JOKE_SUCCESS';\nexport const NEW_JOKE_FAILURE = 'NEW_JOKE_FAILURE';\nexport const newJoke = newJoke => dispatch => {\n  console.log('New Joke: ', newJoke);\n  dispatch({\n    type: NEW_JOKE_START\n  });\n  return axios.post('http://localhost:4000/api/jokes', newJoke) // .post('https://dadjokes-backend.herokuapp.com/api/auth/register', newUser)\n  .then(res => {\n    dispatch({\n      type: NEW_JOKE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: NEW_JOKE_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/actions/newJoke.js"],"names":["axios","NEW_JOKE_START","NEW_JOKE_SUCCESS","NEW_JOKE_FAILURE","newJoke","dispatch","console","log","type","post","then","res","payload","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,OAAO,GAAGA,OAAO,IAAIC,QAAQ,IAAI;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,OAA1B;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACA,SAAOD,KAAK,CACTS,IADI,CACC,iCADD,EACoCL,OADpC,EAEL;AAFK,GAGJM,IAHI,CAGCC,GAAG,IAAI;AACXN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,gBADC;AAEPU,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GARI,EASJC,KATI,CASEC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEL,gBAAR;AAA0BS,MAAAA,OAAO,EAAEG;AAAnC,KAAD,CAAR;AACD,GAXI,CAAP;AAYD,CAfM","sourcesContent":["import axios from 'axios'\n\nexport const NEW_JOKE_START = 'NEW_JOKE_START'\nexport const NEW_JOKE_SUCCESS = 'NEW_JOKE_SUCCESS'\nexport const NEW_JOKE_FAILURE = 'NEW_JOKE_FAILURE'\n\nexport const newJoke = newJoke => dispatch => {\n  console.log('New Joke: ', newJoke)\n  dispatch({ type: NEW_JOKE_START })\n  return axios\n    .post('http://localhost:4000/api/jokes', newJoke)\n    // .post('https://dadjokes-backend.herokuapp.com/api/auth/register', newUser)\n    .then(res => {\n      dispatch({\n        type: NEW_JOKE_SUCCESS,\n        payload: res.data\n      })\n    })\n    .catch(err => {\n      dispatch({ type: NEW_JOKE_FAILURE, payload: err })\n    })\n}"]},"metadata":{},"sourceType":"module"}