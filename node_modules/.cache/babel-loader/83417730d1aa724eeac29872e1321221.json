{"ast":null,"code":"var _jsxFileName = \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/Joke/joke.js\";\nimport React from 'react';\nimport NavBar from '../Nav/NavBar'; // import './home.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaughSquint } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap'; // import { Link } from 'react-router-dom'\n\nimport { getJokeComments } from '../../actions/getJokeComments';\nimport { getJokeById } from '../../actions/getJokeById';\nconst laugh = React.createElement(FontAwesomeIcon, {\n  icon: faLaughSquint,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n});\nconst comment = React.createElement(FontAwesomeIcon, {\n  icon: faComment,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n});\n\nclass Joke extends React.Component {\n  componentDidMount() {\n    this.props.getJokeComments(this.props.match.params.id);\n    this.props.getJokeById(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"private-jokes-wrapper\",\n      key: this.props.joke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"indi-joke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"joke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"joke-meat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.joke.img_url,\n      alt: \"profile pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      className: \"joke-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.joke.username, \":\"), React.createElement(\"div\", {\n      className: \"joke-joke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.joke.joke))), React.createElement(\"div\", {\n      className: \"reveal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"punchline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      // id={hidden ? 'hidden' : ''}\n      // hidden={hidden}\n      className: \"joke-punchline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.joke.punchline)), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, comment, \" 58\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, laugh, \" 56\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Reveal Punchline!\")), this.props.jokeComments.map(comment => {\n      return React.createElement(\"div\", {\n        className: \"comment\",\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"comment-pic\",\n        src: comment.img_url,\n        alt: \"profile pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        className: \"comment-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, comment.username, \":\"), React.createElement(\"div\", {\n        className: \"comment-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, comment.comment));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    joke: state.joke,\n    jokeComments: state.jokeComments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getJokeById,\n  getJokeComments\n})(Joke);","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/Joke/joke.js"],"names":["React","NavBar","FontAwesomeIcon","faLaughSquint","faComment","connect","Button","getJokeComments","getJokeById","laugh","comment","Joke","Component","componentDidMount","props","match","params","id","render","joke","img_url","username","punchline","jokeComments","map","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NavBar from '../Nav/NavBar'\n// import './home.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLaughSquint } from '@fortawesome/free-solid-svg-icons'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\n\nimport { connect } from 'react-redux'\nimport { Button } from 'reactstrap'\n// import { Link } from 'react-router-dom'\nimport { getJokeComments } from '../../actions/getJokeComments'\nimport { getJokeById } from '../../actions/getJokeById'\n\nconst laugh = <FontAwesomeIcon icon={faLaughSquint} />\nconst comment = <FontAwesomeIcon icon={faComment} />\n\nclass Joke extends React.Component {\n  componentDidMount() {\n    this.props.getJokeComments(this.props.match.params.id)\n    this.props.getJokeById(this.props.match.params.id)\n  }\n  render() {\n    return (\n      <div className='private-jokes-wrapper' key={this.props.joke.id}>\n        <NavBar />\n        <div className='indi-joke'>\n          <div className='joke'>\n            <div className='joke-meat'>\n              <img src={this.props.joke.img_url} alt='profile pic' />\n              <h6 className='joke-username'>{this.props.joke.username}:</h6>\n              <div className='joke-joke'>{this.props.joke.joke}</div>\n            </div>\n          </div>\n          <div className='reveal'>\n            <div className='punchline'>\n              <div \n                // id={hidden ? 'hidden' : ''}\n                // hidden={hidden}\n                className='joke-punchline'>\n                {this.props.joke.punchline}\n              </div>\n            </div>\n            <Button>\n              {comment} 58\n            </Button>\n            <Button>{laugh} 56</Button>\n            <Button>Reveal Punchline!</Button> \n            {/* onClick={toggleReveal} */}\n          </div>\n          {this.props.jokeComments.map(comment => {\n            return (\n              <div className='comment' key={comment.id}>\n                <img className='comment-pic' src={comment.img_url} alt='profile pic' />\n                <h6 className='comment-username'>{comment.username}:</h6>\n                <div className='comment-comment'>{comment.comment}</div>\n              </div>\n            )\n          })}\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      joke: state.joke,\n      jokeComments: state.jokeComments,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getJokeById, getJokeComments }\n)(Joke)"]},"metadata":{},"sourceType":"module"}