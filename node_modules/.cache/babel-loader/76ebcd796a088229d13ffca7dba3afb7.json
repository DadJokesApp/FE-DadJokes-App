{"ast":null,"code":"import _defineProperty from \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN_START, LOGIN_SUCCESS, LOGIN_FAILURE } from '../actions/loginAction';\nimport { REGISTER_START, REGISTER_SUCCESS, REGISTER_FAILURE } from '../actions/registerAction';\nimport { LOGOUT_START, LOGOUT_SUCCESS, LOGOUT_FAILURE } from '../actions/logoutAction';\nimport { UPDATE_USER_START, UPDATE_USER_SUCCESS, UPDATE_USER_FAILURE } from '../actions/updateUser';\nimport { DELETE_USER_START, DELETE_USER_SUCCESS, DELETE_USER_FAILURE } from '../actions/deleteUser';\nimport { GET_JOKES_START, GET_JOKES_SUCCESS, GET_JOKES_FAILURE } from '../actions/getJokes';\nimport { GET_PUBLIC_START, GET_PUBLIC_SUCCESS, GET_PUBLIC_FAILURE } from '../actions/publicJokes';\nimport { GET_USER_JOKES_START, GET_USER_JOKES_SUCCESS, GET_USER_JOKES_FAILURE } from '../actions/userJokes';\nimport { GET_JOKE_COMMENTS_START, GET_JOKE_COMMENTS_SUCCESS, GET_JOKE_COMMENTS_FAILURE } from '../actions/getJokeComments';\nimport jwt from 'jsonwebtoken';\nconst initialState = {\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false,\n  token: localStorage.getItem('token'),\n  user: jwt.decode(localStorage.getItem('token')),\n  jokes: [],\n  publicJokes: [],\n  jokeComments: [],\n  addingUser: false,\n  addedUser: false,\n  active: false,\n  updating: false,\n  updated: false,\n  deleting: false,\n  deleted: false,\n  gettingJokes: false,\n  gotJokes: false,\n  userJokes: []\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // Login Reducer ü¶é\n    case LOGIN_START:\n      return _objectSpread({}, state, {\n        isLoggingIn: true,\n        isLoggedIn: false,\n        error: ''\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        user: action.payload.user,\n        token: action.payload.data.token,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        error: ''\n      });\n\n    case LOGIN_FAILURE:\n      return _objectSpread({}, state, {\n        isLoggingIn: false,\n        isLoggedIn: false,\n        error: action.payload // Register reducer ü¶Ü\n\n      });\n\n    case REGISTER_START:\n      return _objectSpread({}, state, {\n        addingUser: true,\n        addedUser: false,\n        error: ''\n      });\n\n    case REGISTER_SUCCESS:\n      return _objectSpread({}, state, {\n        addingUser: false,\n        addedUser: true,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        error: ''\n      });\n\n    case REGISTER_FAILURE:\n      return _objectSpread({}, state, {\n        addedUser: false,\n        error: action.payload // Logout reducer üöÄ\n\n      });\n\n    case LOGOUT_START:\n      return _objectSpread({}, state, {\n        loggingOut: true,\n        loggedOut: false,\n        error: ''\n      });\n\n    case LOGOUT_SUCCESS:\n      return _objectSpread({}, state, {\n        loggingOut: false,\n        loggedOut: true,\n        user: action.payload,\n        error: ''\n      });\n\n    case LOGOUT_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload // Update user üíÅ\n\n      });\n\n    case UPDATE_USER_START:\n      return _objectSpread({}, state, {\n        updating: true,\n        updated: false,\n        error: ''\n      });\n\n    case UPDATE_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        updating: false,\n        updated: true,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        error: ''\n      });\n\n    case UPDATE_USER_FAILURE:\n      return _objectSpread({}, state, {\n        updated: false,\n        error: action.payload // Delete user\n\n      });\n\n    case DELETE_USER_START:\n      return _objectSpread({}, state, {\n        updating: true,\n        updated: false,\n        error: ''\n      });\n\n    case DELETE_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        updating: false,\n        updated: true,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        error: ''\n      });\n\n    case DELETE_USER_FAILURE:\n      return _objectSpread({}, state, {\n        updated: false,\n        error: action.payload // Get all jokes üòÜ\n\n      });\n\n    case GET_JOKES_START:\n      return _objectSpread({}, state, {\n        gettingJokes: true,\n        gotJokes: false,\n        error: ''\n      });\n\n    case GET_JOKES_SUCCESS:\n      return _objectSpread({}, state, {\n        gettingJokes: false,\n        gotJokes: true,\n        jokes: action.payload,\n        error: ''\n      });\n\n    case GET_JOKES_FAILURE:\n      return _objectSpread({}, state, {\n        error: '' // Get public jokes üòÜ\n\n      });\n\n    case GET_PUBLIC_START:\n      return _objectSpread({}, state, {\n        gettingJokes: true,\n        gotJokes: false,\n        error: ''\n      });\n\n    case GET_PUBLIC_SUCCESS:\n      return _objectSpread({}, state, {\n        gettingJokes: false,\n        gotJokes: true,\n        publicJokes: action.payload,\n        error: ''\n      });\n\n    case GET_PUBLIC_FAILURE:\n      return _objectSpread({}, state, {\n        error: '' // GET user jokes\n\n      });\n\n    case GET_USER_JOKES_START:\n      return _objectSpread({}, state, {\n        gettingJokes: true,\n        gotJokes: false,\n        error: ''\n      });\n\n    case GET_USER_JOKES_SUCCESS:\n      return _objectSpread({}, state, {\n        gettingJokes: false,\n        gotJokes: true,\n        userJokes: action.payload,\n        error: ''\n      });\n\n    case GET_USER_JOKES_FAILURE:\n      return _objectSpread({}, state, {\n        error: '' // GET joke comments\n\n      });\n\n    case GET_JOKE_COMMENTS_START:\n      return _objectSpread({}, state, {\n        gettingComments: true,\n        gotComments: false,\n        error: ''\n      });\n\n    case GET_JOKE_COMMENTS_SUCCESS:\n      return _objectSpread({}, state, {\n        gettingComments: false,\n        gotComments: true,\n        jokeComments: action.payload,\n        error: ''\n      });\n\n    case GET_JOKE_COMMENTS_FAILURE:\n      return _objectSpread({}, state, {\n        error: ''\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/reducers/index.js"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_FAILURE","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","GET_JOKES_START","GET_JOKES_SUCCESS","GET_JOKES_FAILURE","GET_PUBLIC_START","GET_PUBLIC_SUCCESS","GET_PUBLIC_FAILURE","GET_USER_JOKES_START","GET_USER_JOKES_SUCCESS","GET_USER_JOKES_FAILURE","GET_JOKE_COMMENTS_START","GET_JOKE_COMMENTS_SUCCESS","GET_JOKE_COMMENTS_FAILURE","jwt","initialState","error","isLoggedIn","isLoggingIn","token","localStorage","getItem","user","decode","jokes","publicJokes","jokeComments","addingUser","addedUser","active","updating","updated","deleting","deleted","gettingJokes","gotJokes","userJokes","rootReducer","state","action","type","payload","data","loggingOut","loggedOut","gettingComments","gotComments"],"mappings":"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","sourcesContent":["import {\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n} from '../actions/loginAction'\n\nimport {\n  REGISTER_START,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n} from '../actions/registerAction'\n\nimport {\n  LOGOUT_START,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n} from '../actions/logoutAction'\n\nimport {\n  UPDATE_USER_START,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAILURE,\n} from '../actions/updateUser'\n\nimport {\n  DELETE_USER_START,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAILURE,\n} from '../actions/deleteUser'\n\nimport {\n  GET_JOKES_START,\n  GET_JOKES_SUCCESS,\n  GET_JOKES_FAILURE,\n} from '../actions/getJokes'\n\nimport {\n  GET_PUBLIC_START,\n  GET_PUBLIC_SUCCESS,\n  GET_PUBLIC_FAILURE,\n} from '../actions/publicJokes'\n\nimport {\n  GET_USER_JOKES_START,\n  GET_USER_JOKES_SUCCESS,\n  GET_USER_JOKES_FAILURE,\n} from '../actions/userJokes'\n\nimport {\n  GET_JOKE_COMMENTS_START,\n  GET_JOKE_COMMENTS_SUCCESS,\n  GET_JOKE_COMMENTS_FAILURE,\n} from '../actions/getJokeComments'\n\nimport jwt from 'jsonwebtoken'\n\nconst initialState = {\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false,\n  token: localStorage.getItem('token'),\n  user: jwt.decode(localStorage.getItem('token')),\n  jokes: [],\n  publicJokes: [],\n  jokeComments: [],\n  addingUser: false,\n  addedUser: false,\n  active: false,\n  updating: false,\n  updated: false,\n  deleting: false,\n  deleted: false,\n  gettingJokes: false,\n  gotJokes: false,\n  userJokes: [],\n}\n\nconst rootReducer = (state = initialState, action) => {\n  switch(action.type) {\n\n    // Login Reducer ü¶é\n    case LOGIN_START:\n      return {\n        ...state,\n        isLoggingIn: true,\n        isLoggedIn: false,\n        error: '',\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        error: '',\n      }\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: false,\n        error: action.payload,\n      }\n\n    // Register reducer ü¶Ü\n    case REGISTER_START:\n      return {\n        ...state,\n        addingUser: true,\n        addedUser: false,\n        error: '',\n      }\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        addingUser: false,\n        addedUser: true,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        error: '',\n      }\n    case REGISTER_FAILURE:\n      return {\n        ...state,\n        addedUser: false,\n        error: action.payload,\n      }\n\n    // Logout reducer üöÄ\n    case LOGOUT_START:\n      return {\n        ...state,\n        loggingOut: true,\n        loggedOut: false,\n        error: '',\n      }\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        loggingOut: false,\n        loggedOut: true,\n        user: action.payload,\n        error: '',\n      }\n    case LOGOUT_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    // Update user üíÅ\n    case UPDATE_USER_START:\n      return {\n        ...state,\n        updating: true,\n        updated: false,\n        error: '',\n      }\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        updating: false,\n        updated: true,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        error: '',\n      }\n    case UPDATE_USER_FAILURE:\n      return {\n        ...state,\n        updated: false,\n        error: action.payload,\n      }\n\n    // Delete user\n    case DELETE_USER_START:\n      return {\n        ...state,\n        updating: true,\n        updated: false,\n        error: '',\n      }\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        updating: false,\n        updated: true,\n        user: action.payload.user,\n        token: action.payload.data.token,\n        error: '',\n      }\n    case DELETE_USER_FAILURE:\n      return {\n        ...state,\n        updated: false,\n        error: action.payload,\n      }\n\n    // Get all jokes üòÜ\n    case GET_JOKES_START:\n      return {\n        ...state,\n        gettingJokes: true,\n        gotJokes: false,\n        error: '',\n      }\n\n    case GET_JOKES_SUCCESS:\n      return {\n        ...state,\n        gettingJokes: false,\n        gotJokes: true,\n        jokes: action.payload,\n        error: '',\n      }\n\n    case GET_JOKES_FAILURE:\n      return {\n        ...state,\n        error: '',\n      }\n\n    // Get public jokes üòÜ\n    case GET_PUBLIC_START:\n      return {\n        ...state,\n        gettingJokes: true,\n        gotJokes: false,\n        error: '',\n      }\n\n    case GET_PUBLIC_SUCCESS:\n      return {\n        ...state,\n        gettingJokes: false,\n        gotJokes: true,\n        publicJokes: action.payload,\n        error: '',\n      }\n\n    case GET_PUBLIC_FAILURE:\n      return {\n        ...state,\n        error: '',\n      }\n\n    // GET user jokes\n    case GET_USER_JOKES_START:\n      return {\n        ...state,\n        gettingJokes: true,\n        gotJokes: false,\n        error: '',\n      }\n\n    case GET_USER_JOKES_SUCCESS:\n      return {\n        ...state,\n        gettingJokes: false,\n        gotJokes: true,\n        userJokes: action.payload,\n        error: '',\n      }\n\n    case GET_USER_JOKES_FAILURE:\n      return {\n        ...state,\n        error: '',\n      }\n\n    // GET joke comments\n    case GET_JOKE_COMMENTS_START:\n      return {\n        ...state,\n        gettingComments: true,\n        gotComments: false,\n        error: '',\n      }\n\n    case GET_JOKE_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        gettingComments: false,\n        gotComments: true,\n        jokeComments: action.payload,\n        error: '',\n      }\n\n    case GET_JOKE_COMMENTS_FAILURE:\n      return {\n        ...state,\n        error: '',\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}