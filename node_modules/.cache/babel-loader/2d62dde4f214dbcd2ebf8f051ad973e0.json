{"ast":null,"code":"import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nexport const UPDATE_JOKE_START = 'UPDATE_JOKE_START';\nexport const UPDATE_JOKE_SUCCESS = 'UPDATE_JOKE_SUCCESS';\nexport const UPDATE_JOKE_FAILURE = 'UPDATE_JOKE_FAILURE';\nexport const updateUser = updatedJoke => dispatch => {\n  console.log('User: ', updatedJoke);\n  dispatch({\n    type: UPDATE_JOKE_START\n  });\n  return axios.put(\"http://localhost:4000/api/jokes/\".concat(updatedJoke.id), updatedJoke) // .put('https://dadjokes-backend.herokuapp.com/api/jokes/${updatedJoke.id}`, updatedJoke)\n  .then(res => {\n    const token = res.data.token;\n    console.log(\"Token: \".concat(res.data.user));\n    localStorage.setItem('token', token);\n    const decodedToken = jwt.decode(token);\n    console.log(\"Data: \".concat(decodedToken));\n    dispatch({\n      type: UPDATE_JOKE_SUCCESS,\n      payload: {\n        data: res.data,\n        user: decodedToken\n      }\n    });\n  }).catch(err => {\n    // console.log(`updated user: ${id}`)\n    dispatch({\n      type: UPDATE_JOKE_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/actions/updateJokes.js"],"names":["axios","jwt","UPDATE_JOKE_START","UPDATE_JOKE_SUCCESS","UPDATE_JOKE_FAILURE","updateUser","updatedJoke","dispatch","console","log","type","put","id","then","res","token","data","user","localStorage","setItem","decodedToken","decode","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,UAAU,GAAGC,WAAW,IAAIC,QAAQ,IAAI;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,WAAtB;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACA,SAAOF,KAAK,CACTW,GADI,2CACmCL,WAAW,CAACM,EAD/C,GACqDN,WADrD,EAEL;AAFK,GAGJO,IAHI,CAGCC,GAAG,IAAI;AACX,UAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB;AACAP,IAAAA,OAAO,CAACC,GAAR,kBAAsBK,GAAG,CAACE,IAAJ,CAASC,IAA/B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACA,UAAMK,YAAY,GAAGnB,GAAG,CAACoB,MAAJ,CAAWN,KAAX,CAArB;AACAP,IAAAA,OAAO,CAACC,GAAR,iBAAqBW,YAArB;AACAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,mBADC;AAEPmB,MAAAA,OAAO,EAAE;AACPN,QAAAA,IAAI,EAAEF,GAAG,CAACE,IADH;AAEPC,QAAAA,IAAI,EAAEG;AAFC;AAFF,KAAD,CAAR;AAOD,GAhBI,EAiBJG,KAjBI,CAiBEC,GAAG,IAAI;AACZ;AACAjB,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,mBAAR;AAA6BkB,MAAAA,OAAO,EAAEE;AAAtC,KAAD,CAAR;AACD,GApBI,CAAP;AAqBD,CAxBM","sourcesContent":["import axios from 'axios'\n\nimport jwt from 'jsonwebtoken'\n\nexport const UPDATE_JOKE_START = 'UPDATE_JOKE_START'\nexport const UPDATE_JOKE_SUCCESS = 'UPDATE_JOKE_SUCCESS'\nexport const UPDATE_JOKE_FAILURE = 'UPDATE_JOKE_FAILURE'\n\nexport const updateUser = updatedJoke => dispatch => {\n  console.log('User: ', updatedJoke)\n  dispatch({ type: UPDATE_JOKE_START })\n  return axios\n    .put(`http://localhost:4000/api/jokes/${updatedJoke.id}`, updatedJoke)\n    // .put('https://dadjokes-backend.herokuapp.com/api/jokes/${updatedJoke.id}`, updatedJoke)\n    .then(res => {\n      const token = res.data.token\n      console.log(`Token: ${res.data.user}`)\n      localStorage.setItem('token', token)\n      const decodedToken = jwt.decode(token)\n      console.log(`Data: ${decodedToken}`)\n      dispatch({\n        type: UPDATE_JOKE_SUCCESS,\n        payload: {\n          data: res.data,\n          user: decodedToken,\n          }\n      })\n    })\n    .catch(err => {\n      // console.log(`updated user: ${id}`)\n      dispatch({ type: UPDATE_JOKE_FAILURE, payload: err })\n    })\n}"]},"metadata":{},"sourceType":"module"}