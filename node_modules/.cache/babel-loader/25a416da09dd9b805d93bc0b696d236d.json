{"ast":null,"code":"import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const login = creds => dispatch => {\n  console.log('Login Creds: ', creds);\n  dispatch({\n    type: LOGIN_START\n  });\n  return axios.post('http://localhost:4000/api/auth/login', // .post('https://dadjokes-backend.herokuapp.com/api/auth/login',\n  creds, {\n    headers: creds\n  }).then(res => {\n    const token = res.data.token;\n    localStorage.setItem('token', token);\n    const decodedToken = jwt.decode(token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        data: res.data,\n        user: decodedToken,\n        isLoggedIn: true\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/mayankhotrumble/Lambda/FE-DadJokes-App/src/actions/loginAction.js"],"names":["axios","jwt","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","login","creds","dispatch","console","log","type","post","headers","then","res","token","data","localStorage","setItem","decodedToken","decode","payload","user","isLoggedIn","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAIC,QAAQ,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAA7B;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACA,SAAOF,KAAK,CACTW,IADI,CACC,sCADD,EAEL;AACEL,EAAAA,KAHG,EAIH;AAAEM,IAAAA,OAAO,EAAEN;AAAX,GAJG,EAKJO,IALI,CAKCC,GAAG,IAAI;AACX,UAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACA,UAAMI,YAAY,GAAGlB,GAAG,CAACmB,MAAJ,CAAWL,KAAX,CAArB;AACAR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,aADC;AAEPkB,MAAAA,OAAO,EAAE;AACPL,QAAAA,IAAI,EAAEF,GAAG,CAACE,IADH;AAEPM,QAAAA,IAAI,EAAEH,YAFC;AAGPI,QAAAA,UAAU,EAAE;AAHL;AAFF,KAAD,CAAR;AAQD,GAjBI,EAkBJC,KAlBI,CAkBEC,GAAG,IAAI;AACZlB,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,aAAR;AAAuBiB,MAAAA,OAAO,EAAEI;AAAhC,KAAD,CAAR;AACD,GApBI,CAAP;AAqBD,CAxBM","sourcesContent":["import axios from 'axios'\n\nimport jwt from 'jsonwebtoken'\n\nexport const LOGIN_START = 'LOGIN_START'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\n\nexport const login = creds => dispatch => {\n  console.log('Login Creds: ', creds)\n  dispatch({ type: LOGIN_START })\n  return axios\n    .post('http://localhost:4000/api/auth/login',\n    // .post('https://dadjokes-backend.herokuapp.com/api/auth/login',\n      creds,\n      { headers: creds })\n    .then(res => {\n      const token = res.data.token\n      localStorage.setItem('token', token)\n      const decodedToken = jwt.decode(token)\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          data: res.data,\n          user: decodedToken,\n          isLoggedIn: true,\n        }\n      })\n    })\n    .catch(err => {\n      dispatch({ type: LOGIN_FAILURE, payload: err })\n    })\n}"]},"metadata":{},"sourceType":"module"}