{"ast":null,"code":"var _jsxFileName = \"/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/PrivateJokes/jokes.js\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaughSquint } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nconst laugh = React.createElement(FontAwesomeIcon, {\n  icon: faLaughSquint,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\nconst comment = React.createElement(FontAwesomeIcon, {\n  icon: faComment,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\n\nclass Jokes extends React.Component {\n  render() {\n    const _this$props = this.props,\n          jokes = _this$props.jokes,\n          toggleReveal = _this$props.toggleReveal,\n          revealed = _this$props.revealed;\n    console.log(revealed);\n    return React.createElement(\"div\", {\n      className: \"joke-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, jokes.map(joke => {\n      return React.createElement(\"div\", {\n        key: joke.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/jokes/\".concat(joke.id),\n        key: joke.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"joke\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"joke-meat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: joke.img_url,\n        alt: \"profile pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        className: \"joke-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, joke.username, \":\"), React.createElement(\"div\", {\n        className: \"joke-joke\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, joke.joke)))), React.createElement(\"div\", {\n        className: \"reveal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"punchline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: revealed ? 'hidden' : '',\n        revealed: revealed,\n        className: \"joke-punchline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, joke.punchline)), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, comment, \" 58\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, laugh, \" 56\"), React.createElement(Button, {\n        onClick: toggleReveal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Reveal Punchline!\")));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    jokes: state.jokes,\n    jokeComments: state.jokeComments\n  };\n};\n\nexport default connect(mapStateToProps, {})(Jokes);","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/components/PrivateJokes/jokes.js"],"names":["React","Button","FontAwesomeIcon","faLaughSquint","faComment","Link","connect","laugh","comment","Jokes","Component","render","props","jokes","toggleReveal","revealed","console","log","map","joke","id","img_url","username","punchline","mapStateToProps","state","jokeComments"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Button } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLaughSquint } from '@fortawesome/free-solid-svg-icons'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst laugh = <FontAwesomeIcon icon={faLaughSquint} />\nconst comment = <FontAwesomeIcon icon={faComment} />\n\nclass Jokes extends React.Component {\n  render() {\n    const { jokes, toggleReveal, revealed } = this.props\n    console.log(revealed)\n    return (\n      <div className='joke-wrapper'>\n        {jokes.map(joke => {\n          return (\n            <div key={joke.id}>\n              <Link to={`/jokes/${joke.id}`} key={joke.id}>\n                <div className='joke'>\n                  <div className='joke-meat'>\n                    <img src={joke.img_url} alt='profile pic' />\n                    <h6 className='joke-username'>{joke.username}:</h6>\n                    <div className='joke-joke'>{joke.joke}</div>\n                  </div>\n                </div>\n              </Link>\n              <div className='reveal'>\n                <div className='punchline'>\n                  <div \n                    id={revealed ? 'hidden' : ''}\n                    revealed={revealed}\n                    className='joke-punchline'>\n                    {joke.punchline}\n                  </div>\n                </div>\n                <Button>\n                  {comment} 58\n                </Button>\n                <Button>{laugh} 56</Button>\n                <Button onClick={toggleReveal}>Reveal Punchline!</Button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      jokes: state.jokes,\n      jokeComments: state.jokeComments,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(Jokes)"]},"metadata":{},"sourceType":"module"}