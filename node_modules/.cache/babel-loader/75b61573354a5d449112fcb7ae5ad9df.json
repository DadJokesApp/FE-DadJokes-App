{"ast":null,"code":"import axios from 'axios';\nexport const GET_PUBLIC_START = 'GET_PUBLIC_START';\nexport const GET_PUBLIC_SUCCESS = 'GET_PUBLIC_SUCCESS';\nexport const GET_PUBLIC_FAILURE = 'GET_PUBLIC_FAILURE';\nexport const getPublicJokes = () => dispatch => {\n  dispatch({\n    type: GET_PUBLIC_START\n  });\n  axios.get('http://localhost:4000/api/jokes/public') // .get('https://dadjokes-backend.herokuapp.com/api/jokes/public')\n  .then(res => {\n    dispatch({\n      type: GET_PUBLIC_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_PUBLIC_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/actions/publicJokes.js"],"names":["axios","GET_PUBLIC_START","GET_PUBLIC_SUCCESS","GET_PUBLIC_FAILURE","getPublicJokes","dispatch","type","get","then","res","payload","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAD,EAAAA,KAAK,CACFO,GADH,CACO,wCADP,EAEE;AAFF,GAGGC,IAHH,CAGQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,kBAAR;AAA4BQ,MAAAA,OAAO,EAAED,GAAG,CAACE;AAAzC,KAAD,CAAR;AACD,GALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,kBAAR;AAA4BO,MAAAA,OAAO,EAAEG;AAArC,KAAD,CAAR;AACD,GARH;AASD,CAXM","sourcesContent":["import axios from 'axios'\n\nexport const GET_PUBLIC_START = 'GET_PUBLIC_START'\nexport const GET_PUBLIC_SUCCESS = 'GET_PUBLIC_SUCCESS'\nexport const GET_PUBLIC_FAILURE = 'GET_PUBLIC_FAILURE'\n\nexport const getPublicJokes = () => dispatch => {\n  dispatch({ type: GET_PUBLIC_START })\n  axios\n    .get('http://localhost:4000/api/jokes/public')\n    // .get('https://dadjokes-backend.herokuapp.com/api/jokes/public')\n    .then(res => {\n      dispatch({ type: GET_PUBLIC_SUCCESS, payload: res.data })\n    })\n    .catch(err => {\n      dispatch({ type: GET_PUBLIC_FAILURE, payload: err })\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}