{"ast":null,"code":"import axios from 'axios';\nexport const GET_JOKE_BY_ID_START = 'GET_JOKE_BY_ID_START';\nexport const GET_JOKE_BY_ID_SUCCESS = 'GET_JOKE_BY_ID_SUCCESS';\nexport const GET_JOKE_BY_ID_FAILURE = 'GET_JOKE_BY_ID_FAILURE';\nexport const getJokeById = joke_id => dispatch => {\n  dispatch({\n    type: GET_JOKE_BY_ID_START\n  });\n  axios.get(\"http://localhost:4000/api/jokes/\".concat(joke_id)) // .get(`https://dadjokes-backend.herokuapp.com/api/jokes/${joke_id}`)\n  .then(res => {\n    dispatch({\n      type: GET_JOKE_BY_ID_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_JOKE_BY_ID_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/home/fireninja/Documents/Lambda/FE-DadJokes-App/src/actions/getJokeById.js"],"names":["axios","GET_JOKE_BY_ID_START","GET_JOKE_BY_ID_SUCCESS","GET_JOKE_BY_ID_FAILURE","getJokeById","joke_id","dispatch","type","get","then","res","payload","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,WAAW,GAAGC,OAAO,IAAIC,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAD,EAAAA,KAAK,CACFQ,GADH,2CAC0CH,OAD1C,GAEE;AAFF,GAGGI,IAHH,CAGQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,sBAAR;AAAgCS,MAAAA,OAAO,EAAED,GAAG,CAACE;AAA7C,KAAD,CAAR;AACD,GALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,sBAAR;AAAgCQ,MAAAA,OAAO,EAAEG;AAAzC,KAAD,CAAR;AACD,GARH;AASD,CAXM","sourcesContent":["import axios from 'axios'\n\nexport const GET_JOKE_BY_ID_START = 'GET_JOKE_BY_ID_START'\nexport const GET_JOKE_BY_ID_SUCCESS = 'GET_JOKE_BY_ID_SUCCESS'\nexport const GET_JOKE_BY_ID_FAILURE = 'GET_JOKE_BY_ID_FAILURE'\n\nexport const getJokeById = joke_id => dispatch => {\n  dispatch({ type: GET_JOKE_BY_ID_START })\n  axios\n    .get(`http://localhost:4000/api/jokes/${joke_id}`)\n    // .get(`https://dadjokes-backend.herokuapp.com/api/jokes/${joke_id}`)\n    .then(res => {\n      dispatch({ type: GET_JOKE_BY_ID_SUCCESS, payload: res.data })\n    })\n    .catch(err => {\n      dispatch({ type: GET_JOKE_BY_ID_FAILURE, payload: err })\n    })\n}"]},"metadata":{},"sourceType":"module"}